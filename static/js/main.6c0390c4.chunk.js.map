{"version":3,"sources":["state/Action.js","comps/Nav.js","comps/Auth/Signup.js","comps/Auth/Signin.js","comps/Pages/connectedHome/Vacation.js","comps/Pages/Main.js","comps/Pages/AdminCP/Admin.js","comps/Pages/AdminCP/Edit.js","comps/Pages/AdminCP/VacationAdmin.js","comps/Pages/AdminCP/AdminMain.js","comps/Pages/AdminCP/Graph.js","App.js","serviceWorker.js","state/Reducer.js","index.js"],"names":["MakeLogin","user","type","data","MakeAdminLogin","getAdminVacations","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","wrap","_context3","prev","next","Axios","get","then","catch","err","console","log","stop","_x3","apply","this","arguments","getUserVacs","_ref4","_callee4","_context4","vacations","nofollow","_x4","logOut","InputHandler","Nav","state","adminLog","refresh","props","getvacations","_this2","isLogged","isAdmin","adminLogin","loginRequest","_this3","goLogOut","history","push","react_default","createElement","className","currentUser","id","react_router_dom","to","onClick","logOutNow","bind","Component","navbar","connect","currentUserID","currentMemberId","userFollowed","UserFollowed","UserNoFollow","currentMember","getuservac","withRouter","Signup","alert","firstname","lastname","username","password","e","setState","defineProperty","target","name","value","preventdefault","mandatory","goRegister","onSubmit","dontSend","onChange","handleText","required","htmlFor","register","regMsg","bob","signup","formMsg","loginUser","loginPass","regMsg_success","_ref","_callee","_context","post","session","msg","_x","Signin","sendIt","logObj","pass","member","method","sendLogin","signin","Vacation","io","unchecked","src","vacation","picture","alt","destination","description","fromdate","todate","price","checked","check","updateFollow","followers","ev","addfollow","unaddfollow","allvacations","getvacationsmsg","addVacErr","vacID","memberID","follow","obj","vacationid","memberid","_ref5","_callee5","_context5","_x5","AddFollow","_ref6","_callee6","_context6","_x6","unAddFollow","socket","Main","on","_this","map","connectedHome_Vacation","key","main","AdminCP","msgFromServ","handleChange","add","file","files","reader","FileReader","readAsDataURL","onload","result","addvacation","admin","_ref2","_callee2","_context2","resp","_x2","addVacation","Edit","getadminvac","v","update","frompricedate","updatevac","edit","_ref7","_callee7","_context7","_x7","updateVacation","VacationAdmin","deleteVac","react_materialize_lib","header","trigger","AdminCP_Edit","deletevac","vacationadmin","_ref8","_callee8","_context8","_x8","deletVacation","AdminMain","AdminCP_VacationAdmin","adminmain","Chart","require","Graph","createChart","vacationfollowers","filter","labelsArry","i","length","concat","ctx","document","getElementById","getContext","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","xAxes","stacked","yAxes","graph","App","comps_Nav","react_router","exact","path","component","app","Boolean","window","location","hostname","match","initState","userFirst","Reducer","undefined","action","assign","firstName","userID","allVac","yesfollow","userid","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c0390c4.chunk.js","sourcesContent":["// IMPORTS.\r\nimport Axios from 'axios'\r\n\r\nexport const MakeLogin = user => {\r\n    return ({ type: \"SIGNIN\", data: user })\r\n}\r\n\r\nexport const MakeAdminLogin = user => {\r\n    return ({ type: \"SIGNIN_ADMIN\", data: user })\r\n}\r\n\r\nexport const registerUser = user => {\r\n    return async dispatch => {\r\n\r\n        Axios.post('/member/register', user)\r\n            .then(data => {\r\n                if (data.data.session.msg === 'PASSED') {\r\n                    dispatch({ type: 'SIGNUP_SUCCESS', data: data.data.session });\r\n                } else {\r\n                    dispatch({ type: 'SIGNUP_TAKEN', data: data.data.session.user });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport const addVacation = (data) => {\r\n    return async (dispatch) => {\r\n        await Axios.post('/vacation/add', data)\r\n            .then(resp => {\r\n                if (resp.data.err) {\r\n                    dispatch({ type: 'ADD_VAC_ERR', data: resp.data.err })\r\n                } else {\r\n                    dispatch({ type: 'ADD_VAC_TRUE', data: resp.data })\r\n                }\r\n\r\n\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n}\r\n\r\nexport const getAdminVacations = (data) => {\r\n    return async (dispatch) => {\r\n        Axios.get('/vacation/allvac')\r\n            .then(data => {\r\n                dispatch({ type: 'GET_VAC_ALL', data: data })\r\n            })\r\n            .catch(err => { console.log(err) });\r\n    }\r\n}\r\n\r\nexport const getUserVacs = data => {\r\n    return async (dispatch) => {\r\n        Axios.get('vacation?currentUserID=' + data)\r\n            .then(vacations => {\r\n                console.log(vacations)\r\n                if (vacations.data.nofollow) {\r\n                    dispatch({ type: 'SORT_VAC', data: vacations })\r\n                }\r\n                else if (vacations.data)\r\n                    console.log(vacations);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n}\r\n\r\nexport const AddFollow = (vacID, memberID, follow) => {\r\n    let obj = {\r\n        vacationid: vacID,\r\n        memberid: memberID,\r\n        followers: follow\r\n    }\r\n    return async (dispatch) => {\r\n        Axios.post('/vacation/follow', obj)\r\n            .then(data => {\r\n                dispatch({ type: 'ADD_FOLLOW', data: data })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n}\r\n\r\nexport const unAddFollow = (vacID, memberID) => {\r\n    let obj = {\r\n        vacationid: vacID,\r\n        memberid: memberID\r\n    }\r\n    return async (dispatch) => {\r\n        Axios.post('/vacation/unfollow', obj)\r\n            .then(data => {\r\n                dispatch({ type: 'ADD_FOLLOW', data: data })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n}\r\n\r\nexport const updateVacation = (vacID, data) => {\r\n\r\n    let obj = {\r\n        id: vacID,\r\n        description: data.description,\r\n        destination: data.destination,\r\n        picture: data.picture,\r\n        fromdate: data.fromdate,\r\n        todate: data.todate,\r\n        price: data.price\r\n    }\r\n\r\n    return async (dispatch) => {\r\n        debugger\r\n        Axios.post('/vacation/update', obj)\r\n            .then(data => {\r\n                dispatch({ type: 'UPDATE_VAC', data: data })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const deletVacation = (vacID) => {\r\n    let obj = {\r\n        vacationid: vacID,\r\n    }\r\n    return async (dispatch) => {\r\n        Axios.post('/vacation/del', obj)\r\n            .then(data => {\r\n                dispatch({ type: 'DELETE_VAC', data: data })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n}\r\n\r\nexport const RemoveFollow = vacId => {\r\n\r\n    return async (dispatch) => {\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const logOut = data => {\r\n    return { type: 'LOGOUT', data: data };\r\n}\r\n\r\nexport const InputHandler = data => {\r\n    return { type: \"INPUT_HANDLE\", data: data };\r\n}","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { NavLink as Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios'\r\n\r\n// Actions.\r\nimport { logOut, MakeLogin, MakeAdminLogin, getAdminVacations, getUserVacs } from '../state/Action'\r\n\r\n\r\nclass Nav extends Component {\r\n\r\n  state = {\r\n    adminLog: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.refresh()\r\n     await this.props.getvacations() \r\n/*     await this.props.getuservac(this.props.currentUserID) */\r\n  }\r\n\r\n  refresh() {\r\n    Axios.get('/member/session')\r\n      .then((data) => {\r\n        if (data.data.isLogged === true) {\r\n          if (data.data.isAdmin === 'true') {\r\n            console.log('You already logged in as administator');\r\n            this.props.adminLogin(data.data);\r\n          } else {\r\n            console.log('You already logged in');\r\n            this.props.loginRequest(data.data);\r\n          }\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  logOutNow() {\r\n    Axios.get('/member/logout')\r\n      .then(data => {\r\n        console.log(data);\r\n        this.props.goLogOut();\r\n        this.props.history.push('/');\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isAdmin === 'true') {\r\n      return (\r\n        <nav>\r\n          <div className=\"nav-wrapper\">\r\n            <div className=\"brand-logo\">Hey Admin -> {this.props.currentUser}!</div>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n              <li><Link to=\"/adminmain\">Admin Main</Link></li>\r\n              <li><Link to=\"/admin\">Add Vacation</Link></li>\r\n              <li><Link to=\"/admin/graph\">Graph</Link></li>\r\n              <li><button onClick={this.logOutNow.bind(this)}>Logout</button></li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      );\r\n    } else {\r\n      if (this.props.isLogged) {\r\n        return (\r\n          <nav>\r\n            <div className=\"nav-wrapper\">\r\n              <div className=\"brand-logo\">Wellcome Back {this.props.currentUser}!</div>\r\n              <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                <li><Link to=\"/\">Main</Link></li>\r\n                <li><Link to=\"/signup\">Sign up</Link></li>\r\n                <li><button onClick={this.logOutNow.bind(this)}>Logout</button></li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        )\r\n      } else {\r\n        return (\r\n          <nav>\r\n            <div className=\"nav-wrapper\">\r\n              <div className=\"brand-logo\">Vacation</div>\r\n              <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                <li><Link to=\"/\">Main</Link></li>\r\n                <li><Link to=\"/signin\">SignIn</Link></li>\r\n                <li><Link to=\"/signup\">SignUp</Link></li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        )\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAdmin: state.isAdmin,\r\n    currentUserID: state.currentMemberId,\r\n    isLogged: state.isLogged,\r\n    userFollowed: state.UserFollowed,\r\n    UserNoFollow: state.UserNoFollow,\r\n    currentUser: state.currentMember\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loginRequest: data => {\r\n      return dispatch(MakeLogin(data));\r\n    },\r\n    adminLogin: data => {\r\n      return dispatch(MakeAdminLogin(data));\r\n    },\r\n    goLogOut: (data) => {\r\n      dispatch(logOut(data));\r\n    },\r\n    getvacations: (data) => {\r\n      dispatch(getAdminVacations(data))\r\n    },\r\n    getuservac: (data) => {\r\n      dispatch(getUserVacs(data))\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst navbar = connect(mapStateToProps, mapDispatchToProps)(Nav);\r\nexport default withRouter(navbar);\r\n","import React, { Component } from 'react'\r\n\r\n// Import all App dependencies.\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { NavLink as Link } from 'react-router-dom'\r\n\r\n// Actions.\r\nimport { InputHandler, MakeLogin, MakeAdminLogin, registerUser } from '../../state/Action'\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        alert: '',\r\n        firstname: 'firstname',\r\n        lastname: 'lastname',\r\n        username: 'username',\r\n        password: 'password'\r\n    }\r\n\r\n    handleText(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    dontSend(e) {\r\n        e.preventdefault();\r\n    }\r\n\r\n    async register() {\r\n\r\n        // Check that all the fileds are full.\r\n        let mandatory = this.state;\r\n        if (mandatory.firstname === '' || mandatory.firstname === 'firstname') {\r\n            this.setState({ alert: 'Fill firstname input' });\r\n        }\r\n        else if (mandatory.lastname === '' || mandatory.lastname === 'lastname') {\r\n            this.setState({ alert: 'Fill lastname input' });\r\n        }\r\n        else if (mandatory.username === '' || mandatory.username === 'username') {\r\n            this.setState({ alert: 'Fill username input' });\r\n        }\r\n        else if (mandatory.password === '' || mandatory.password === 'password') {\r\n            this.setState({ alert: 'Fill password input' });\r\n        } else {\r\n\r\n            // Send the user object to server.\r\n            this.props.goRegister(this.state);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.props.isLogged) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <h1> {this.props.currentMember} You already logged in... </h1>\r\n                        <Link to=\"/\"> Go to Main </Link>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n\r\n            <div className=\"row\">\r\n                <div className=\"card indigo darken-3 center-align\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Register</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card indigo darken-3 center-align\">\r\n                    <div className=\"card-content white-text\">\r\n                        <div className=\"row\">\r\n                            <form onSubmit={this.dontSend.bind(this)} className=\"col s12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix fas fa-signature\"></i>\r\n                                        <input onChange={this.handleText.bind(this)} id=\"icon_prefix\" name=\"firstname\" type=\"text\" className=\"validate\" required />\r\n                                        <label htmlFor=\"icon_prefix\">{this.state.firstname}</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix fas fa-user\"></i>\r\n                                        <input onChange={this.handleText.bind(this)} id=\"icon_prefix\" name=\"lastname\" type=\"text\" className=\"validate\" required />\r\n                                        <label htmlFor=\"icon_prefix\">Last Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix fas fa-user\"></i>\r\n                                        <input onChange={this.handleText.bind(this)} id=\"icon_prefix\" name=\"username\" type=\"text\" className=\"validate\" required />\r\n                                        <label htmlFor=\"icon_prefix\">User Name</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix fas fa-user\"></i>\r\n                                        <input onChange={this.handleText.bind(this)} id=\"icon_prefix\" name=\"password\" type=\"text\" className=\"validate\" required />\r\n                                        <label htmlFor=\"icon_prefix\">Password</label>\r\n                                    </div>\r\n                                    <button type=\"button\" onClick={this.register.bind(this)} className=\"waves-effect deep-orange waves-dark btn\"><i className=\"fas fa-share-alt\"></i> Regiser</button>\r\n                                    {this.state.alert}\r\n                                    {this.props.regMsg}\r\n                                    {this.props.bob}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        formMsg: state.formMsg,\r\n        isAdmin: state.isAdmin,\r\n        isLogged: state.isLogged,\r\n        username: state.loginUser,\r\n        password: state.loginPass,\r\n        regMsg: state.regMsg,\r\n        bob: state.regMsg_success,\r\n        currentMember: state.currentMember\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        InputHandler: data => {\r\n            dispatch(InputHandler(data));\r\n        },\r\n        loginRequest: function (data) {\r\n            return dispatch(MakeLogin(data));\r\n        },\r\n        adminLogin: data => {\r\n            return dispatch(MakeAdminLogin(data));\r\n        },\r\n        goRegister: data => {\r\n            return dispatch(registerUser(data))\r\n        }\r\n    };\r\n};\r\n\r\nconst signup = connect(mapStateToProps, mapDispatchToProps)(Signup);\r\nexport default withRouter(signup);","import React, { Component } from 'react'\r\n\r\n// Import all App dependencies.\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { NavLink as Link } from 'react-router-dom'\r\nimport Axios from 'axios'\r\n\r\n// Actions.\r\nimport { InputHandler, MakeLogin, MakeAdminLogin, getUserVacs } from '../../state/Action'\r\n\r\nclass Signin extends Component {\r\n\r\n    state = {\r\n        alert: '',\r\n    }\r\n\r\n    handleText(e) {\r\n        const sendIt = { name: e.target.name, value: e.target.value };\r\n        this.props.InputHandler(sendIt);\r\n    }\r\n\r\n    dontSend(e) {\r\n        e.preventdefault();\r\n    }\r\n\r\n    async sendLogin() {\r\n\r\n        let logObj = {\r\n            user: this.props.username,\r\n            pass: this.props.password\r\n        }\r\n\r\n        if (logObj.user === '' || logObj.pass === '') {\r\n            this.setState({ alert: 'Please fill all the inputs' });\r\n        }\r\n\r\n\r\n        await Axios.post('/member/login', logObj)\r\n            .then(data => {\r\n                console.log(data);\r\n                if (data) {\r\n                    if (data.data.formMsg) {\r\n                        this.setState({ alert: data.data.formMsg })\r\n                    } else {\r\n                        if (data.data.session) {\r\n                            this.props.loginRequest(data.data.session);\r\n                            this.props.getuservac(this.props.currentUserID)\r\n                            let member = data.data.session;\r\n                            this.props.history.push('/');\r\n                            if (member.isAdmin === 'true') {\r\n                                this.props.adminLogin(member);\r\n                                this.props.history.push('/adminmain');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isLogged) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <h1> You already logged in... </h1>\r\n                        <Link to=\"/\"> Go to Main </Link>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m7\">\r\n                    <div className=\"card indigo darken-3 center-align\">\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\">Please login</span>\r\n                            <div className=\"row\">\r\n                                <form method=\"POST\" onSubmit={this.dontSend.bind(this)} className=\"col s12\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s12\">\r\n                                            <i className=\"material-icons prefix fas fa-user-circle\"></i>\r\n                                            <input name=\"loginUser\" onChange={this.handleText.bind(this)} id=\"icon_prefix\" type=\"text\" className=\"validate\" required></input>\r\n                                            <label htmlFor=\"icon_prefix\">First Name</label>\r\n                                        </div>\r\n                                        <div className=\"input-field col s12\">\r\n                                            <i className=\"material-icons prefix fas fa-user-circle\"></i>\r\n                                            <input name=\"loginPass\" onChange={this.handleText.bind(this)} id=\"icon_prefix\" type=\"text\" className=\"validate\" required></input>\r\n                                            <label htmlFor=\"icon_prefix\">First Name</label>\r\n                                        </div>\r\n                                        <Link className=\"white-text\" to=\"/signup\">Register</Link>\r\n                                        <button type=\"button\" onClick={this.sendLogin.bind(this)} className=\"waves-effect waves-light btn\"><i className=\"fas fa-sign-in-alt\"></i> Log in</button>\r\n                                        <hr />\r\n                                        {this.state.alert}\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        formMsg: state.formMsg,\r\n        isAdmin: state.isAdmin,\r\n        isLogged: state.isLogged,\r\n        username: state.loginUser,\r\n        password: state.loginPass\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        InputHandler: data => {\r\n            dispatch(InputHandler(data));\r\n        },\r\n        loginRequest: function (data) {\r\n            return dispatch(MakeLogin(data));\r\n        },\r\n        adminLogin: data => {\r\n            return dispatch(MakeAdminLogin(data));\r\n        },\r\n        getuservac: (data) => {\r\n            dispatch(getUserVacs(data))\r\n        }\r\n    };\r\n};\r\n\r\nconst signin = connect(mapStateToProps, mapDispatchToProps)(Signin);\r\nexport default withRouter(signin);","import React, { Component } from 'react'\r\nimport { getUserVacs, AddFollow, unAddFollow } from '../../../state/Action';\r\n// Import all App dependencies.\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:9999');\r\n\r\n\r\n\r\nclass Vacation extends Component {\r\n\r\n    async componentDidMount() {\r\n        /*         socket.on('vacationsChange', async (msg) => {\r\n                    await this.props.getuservac(20)\r\n                }) */\r\n    }\r\n\r\n    state = {\r\n        unchecked: false\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"col s3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-image\">\r\n                        <img src={this.props.vacation.picture} alt=\"\" />\r\n                        <span className=\"card-title\">{this.props.vacation.destination}</span>\r\n                    </div>\r\n                    <div className=\"card-content center\">\r\n                        {this.props.vacation.description}<br />\r\n\r\n                        <i className=\"fas fa-plane-departure\"></i> {this.props.vacation.fromdate}<br />\r\n                        <i className=\"fas fa-plane-departure\"></i> {this.props.vacation.todate} <br /><br />\r\n                        {this.props.vacation.price} <i className=\"fas fa-shekel-sign\"></i>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <div className=\"switch center\">\r\n                            <label>\r\n                                Unfollow\r\n                                    <input type=\"checkbox\"\r\n                                    checked={this.props.check}\r\n                                    onChange={this.updateFollow.bind(this)}\r\n                                />\r\n                                <span className=\"lever\"></span>\r\n                                Follow\r\n                                 </label>\r\n                        </div> <br /> <br />\r\n                        {this.props.vacation.followers}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    changeCheck() {\r\n        this.setState({unchecked:true})\r\n    }\r\n\r\n    updateFollow(ev) {\r\n\r\n        if (ev.target.checked) {\r\n\r\n            this.props.addfollow(this.props.vacation.id, this.props.currentUserID, this.props.vacation.followers);\r\n        } else {\r\n            this.setState({unchecked:false});\r\n            this.props.unaddfollow(this.props.vacation.id, this.props.currentUserID, this.props.vacation.followers);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getuservac: (data) => {\r\n            dispatch(getUserVacs(data))\r\n        },\r\n        addfollow: (vacID, memberID, follow) => {\r\n            dispatch(AddFollow(vacID, memberID, follow))\r\n        },\r\n        unaddfollow: (vacID, memberID, follow) => {\r\n            dispatch(unAddFollow(vacID, memberID, follow))\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allvacations: state.vacations,\r\n        getvacationsmsg: state.getvacationsmsg,\r\n        isLogged: state.isLogged,\r\n        isAdmin: state.isAdmin,\r\n        currentUser: state.currentUser,\r\n        currentUserID: state.currentMemberId,\r\n        addVacErr: state.addVacErr\r\n    };\r\n};\r\n\r\nconst vacation = connect(mapStateToProps, mapDispatchToProps)(Vacation);\r\nexport default withRouter(vacation);","import React, { Component } from 'react'\r\n\r\n// Import all App dependencies.\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { NavLink as Link } from 'react-router-dom'\r\n\r\n// Actions.\r\nimport { MakeLogin, logOut, getAdminVacations, getUserVacs } from '../../state/Action';\r\nimport Axios from 'axios'\r\nimport Vacation from './connectedHome/Vacation';\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:9999');\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    async componentDidMount() {\r\n        await this.refresh()\r\n        await this.props.getuservac(this.props.currentUserID)\r\n        socket.on('vacationsChange', async (msg) => {\r\n            await this.props.getuservac(this.props.currentUserID)\r\n        })\r\n    }\r\n\r\n    refresh() {\r\n        Axios.get('/member/session')\r\n            .then((data) => {\r\n                if (data.data.isLogged === true) {\r\n                    if (data.data.isAdmin === 'true') {\r\n                        console.log('You already logged in as administator');\r\n                        this.props.adminLogin(data.data);\r\n                    } else {\r\n                        console.log('You already logged in');\r\n                        this.props.loginRequest(data.data);\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.isLogged) {\r\n            this.props.getuservac(this.props.currentUserID)\r\n            return (\r\n                <div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"card indigo darken-3 center-align\">\r\n                            <div className=\"card-content white-text\">\r\n                                <span className=\"card-title\">Followed Vacations</span>\r\n                            </div>\r\n                        </div>\r\n                        {this.props.userFollowed.map(vacation => (\r\n                            <Vacation\r\n                                check={true}\r\n                                key={vacation.id}\r\n                                vacation={vacation}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"card indigo darken-3 center-align\">\r\n                            <div className=\"card-content white-text\">\r\n                                <span className=\"card-title\">unFollowed Vacations</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {this.props.UserNoFollow.map(vacation => (\r\n                            <Vacation\r\n                                check={false}\r\n                                key={vacation.id}\r\n                                vacation={vacation}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12 center\">\r\n                    <h1> Hey Guest! </h1>\r\n                    <p> You must be logged in for browse vacations </p>\r\n                    <span> Go signin page - click <Link to=\"/signin\">here</Link> </span>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loginRequest: data => {\r\n            return dispatch(MakeLogin(data));\r\n        },\r\n        goLogOut: (data) => {\r\n            dispatch(logOut(data));\r\n        },\r\n        getvacations: (data) => {\r\n            dispatch(getAdminVacations(data))\r\n        },\r\n        getuservac: (data) => {\r\n            dispatch(getUserVacs(data))\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allvacations: state.vacations,\r\n        userFollowed: state.UserFollowed,\r\n        UserNoFollow: state.UserNoFollow,\r\n        getvacationsmsg: state.getvacationsmsg,\r\n        isLogged: state.isLogged,\r\n        isAdmin: state.isAdmin,\r\n        currentUser: state.currentUser,\r\n        addVacErr: state.addVacErr,\r\n        currentUserID: state.currentMemberId,\r\n    };\r\n};\r\n\r\nconst main = connect(mapStateToProps, mapDispatchToProps)(Main);\r\nexport default withRouter(main);","import React, { Component } from 'react'\r\n\r\n// Actions.\r\nimport { addVacation, getUserVacs } from '../../../state/Action'\r\n\r\n// Import all App dependencies.\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { NavLink as Link } from 'react-router-dom'\r\nimport io from 'socket.io-client'\r\nconst socket = io('http://localhost:9999');\r\n\r\n\r\n\r\nclass AdminCP extends Component {\r\n\r\n    async componentDidMount() {\r\n        socket.on('vacationsChange', async (msg) => {\r\n            await this.props.getuservac(5)\r\n            this.props.history.push('/')\r\n        })\r\n    }\r\n\r\n\r\n    state = {\r\n        msgFromServ: ''\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.isAdmin !== 'true') {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <h1> Hey! {this.props.currentMember} </h1>\r\n                        <p> You must be logged as administrator to hava access this page. </p>\r\n                        <Link to=\"/\"> Go Back To Main </Link>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"card indigo darken-3 center-align\">\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\"><h1> Add new vacation </h1></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card indigo darken-3 center-align\">\r\n                    <div className=\"card-content white-text\">\r\n                        <div className=\"row\">\r\n                            <form onSubmit={this.dontSend.bind(this)} className=\"col s12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix fas fa-map-marker-alt\"></i>\r\n                                        <input id=\"icon_prefix\" onChange={this.handleChange.bind(this)} name=\"destination\" type=\"text\" className=\"validate\" />\r\n                                        <label htmlFor=\"icon_prefix\">Destination</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix fas fa-question-circle\"></i>\r\n                                        <input id=\"icon_telephone\" onChange={this.handleChange.bind(this)} name=\"description\" type=\"text\" className=\"validate\" />\r\n                                        <label htmlFor=\"icon_telephone\">Description</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix fas fa-images\"></i>\r\n                                        <input id=\"icon_telephone\" onChange={this.handleChange.bind(this)} name=\"picture\" type=\"file\" className=\"validate\" />\r\n                                        <label htmlFor=\"icon_telephone\">Picture</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s6\">\r\n                                        <i className=\"material-icons prefix fas fa-plane-departure\"></i>\r\n                                        <input type=\"date\" onChange={this.handleChange.bind(this)} name=\"fromdate\" className=\"datepicker\"></input>\r\n                                        <label htmlFor=\"icon_telephone\">StartDate</label>\r\n                                    </div>\r\n                                    <div className=\"input-field col s6\">\r\n                                        <i className=\"material-icons prefix fas fa-plane-arrival\"></i>\r\n                                        <input type=\"date\" onChange={this.handleChange.bind(this)} name=\"todate\" className=\"datepicker\"></input>\r\n                                        <label htmlFor=\"icon_telephone\">EndDate</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <i className=\"material-icons prefix fas fa-dollar-sign\"></i>\r\n                                        <input id=\"icon_telephone\" onChange={this.handleChange.bind(this)} name=\"price\" type=\"text\" className=\"validate\" />\r\n                                        <label htmlFor=\"icon_telephone\">Price</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row center\">\r\n                                    <button className=\"btn waves-effect waves-light\" onClick={this.add.bind(this)} type=\"button\" name=\"action\">\r\n                                        Add Vacation <i className=\"material-icons left far fa-paper-plane\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                            {this.props.addVacErr}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    handleChange(ev) {\r\n        if (ev.target.name === 'picture') {\r\n            let file = ev.target.files[0];\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                console.log(reader.result);\r\n                this.setState({ picture: reader.result });\r\n            }\r\n        }\r\n        this.setState({ [ev.target.name]: ev.target.value })\r\n    }\r\n\r\n    dontSend(e) {\r\n        e.preventdefault();\r\n    }\r\n\r\n    add() {\r\n\r\n        // Check that all the fileds are full.\r\n        let mandatory = this.state;\r\n        if (mandatory.destination === '' || mandatory.destination === 'destination') {\r\n            this.setState({ alert: 'Fill destination input' });\r\n        }\r\n        else if (mandatory.description === '' || mandatory.description === 'description') {\r\n            this.setState({ alert: 'Fill description input' });\r\n        }\r\n        else if (mandatory.picture === '' || mandatory.picture === 'picture') {\r\n            this.setState({ alert: 'Fill picture input' });\r\n        }\r\n        else if (mandatory.fromdate === '' || mandatory.fromdate === 'StartDate') {\r\n            this.setState({ alert: 'Fill StartDate input' });\r\n        }\r\n        else if (mandatory.todate === '' || mandatory.todate === 'EndDate') {\r\n            this.setState({ alert: 'Fill End Date input' });\r\n        }\r\n        else if (mandatory.price === '' || mandatory.price === 'EndDate') {\r\n            this.setState({ alert: 'Fill price input' });\r\n        } else {\r\n            this.props.addvacation(this.state);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addvacation: (data) => {\r\n            dispatch(addVacation(data));\r\n        },\r\n        getuservac: (data) => {\r\n            dispatch(getUserVacs(data))\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allvacations: state.vacations,\r\n        getvacationsmsg: state.getvacationsmsg,\r\n        isLogged: state.isLogged,\r\n        isAdmin: state.isAdmin,\r\n        currentUser: state.currentUser,\r\n        currentUserID: state.currentMemberId,\r\n        addVacErr: state.addVacErr\r\n    };\r\n};\r\n\r\nconst admin = connect(mapStateToProps, mapDispatchToProps)(AdminCP);\r\nexport default withRouter(admin);","import React, { Component } from 'react'\r\nimport { getAdminVacations, updateVacation } from '../../../state/Action';\r\n// Import all App dependencies.\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Modal, Button, Icon } from 'react-materialize'\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:9999');\r\n\r\n\r\nclass Edit extends Component {\r\n\r\n    state = {\r\n        description: '',\r\n        destination: '',\r\n        picture: '',\r\n        fromdate: '',\r\n        todate: '',\r\n        price: '',\r\n        alert: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        socket.on('vacationsChange', async (msg) => {\r\n            await this.props.getadminvac(this.props.currentMemberId)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <form onSubmit={this.dontSend.bind(this)} className=\"col s12\">\r\n                    {this.props.alert}\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <i className=\"material-icons prefix fas fa-map-marker-alt\"></i>\r\n                                <input id=\"icon_prefix\" onChange={this.handleChange.bind(this)} name=\"destination\" type=\"text\" className=\"validate\" />\r\n                                <label htmlFor=\"icon_prefix\">{this.props.v.destination}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <i className=\"material-icons prefix fas fa-question-circle\"></i>\r\n                                <input id=\"icon_telephone\" onChange={this.handleChange.bind(this)} name=\"description\" type=\"text\" className=\"validate\" />\r\n                                <label htmlFor=\"icon_telephone\">{this.props.v.description}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <i className=\"material-icons prefix fas fa-images\"></i>\r\n                                <input id=\"icon_telephone\" onChange={this.handleChange.bind(this)} name=\"picture\" type=\"file\" className=\"validate\" />\r\n                                <label htmlFor=\"icon_telephone\">Picture</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s6\">\r\n                                <i className=\"material-icons prefix fas fa-plane-departure\"></i>\r\n                                <input type=\"date\" onChange={this.handleChange.bind(this)} name=\"fromdate\" className=\"datepicker\"></input>\r\n                                <label htmlFor=\"icon_telephone\">{this.props.v.fromdate}</label>\r\n                            </div>\r\n                            <div className=\"input-field col s6\">\r\n                                <i className=\"material-icons prefix fas fa-plane-arrival\"></i>\r\n                                <input type=\"date\" onChange={this.handleChange.bind(this)} name=\"todate\" className=\"datepicker\"></input>\r\n                                <label htmlFor=\"icon_telephone\">{this.props.v.todate}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <i className=\"material-icons prefix fas fa-dollar-sign\"></i>\r\n                                <input id=\"icon_telephone\" onChange={this.handleChange.bind(this)} name=\"price\" type=\"text\" className=\"validate\" />\r\n                                <label htmlFor=\"icon_telephone\">{this.props.v.price}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row center\">\r\n                            <button className=\"btn waves-effect waves-light\"  onClick={this.update.bind(this)}  type=\"button\" name=\"action\">\r\n                                Add Vacation <i className=\"material-icons left far fa-paper-plane\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    update() {\r\n\r\n        let mandatory = this.state;\r\n        if (mandatory.destination === '' || mandatory.destination === this.props.v.destination) {\r\n            this.setState({ alert: 'Fill destination input' });\r\n        }\r\n        else if (mandatory.description === '' || mandatory.description === this.props.v.description) {\r\n            this.setState({ alert: 'Fill description input' });\r\n        }\r\n        else if (mandatory.fromdate === '' || mandatory.fromdate === this.props.v.fromdate) {\r\n            this.setState({ alert: 'Fill fromdate input' });\r\n        }\r\n        else if (mandatory.todate === '' || mandatory.todate === this.props.v.todate) {\r\n            this.setState({ alert: 'Fill todate input' });\r\n        }\r\n        else if (mandatory.price === '' || mandatory.price === this.props.v.frompricedate) {\r\n            this.setState({ alert: 'Fill price input' });\r\n        } else {\r\n\r\n            // Update.\r\n            this.props.updatevac(this.props.v.id, this.state);\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    handleChange(ev) {\r\n        if (ev.target.name === 'picture') {\r\n            let file = ev.target.files[0];\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                console.log(reader.result);\r\n                this.setState({ picture: reader.result });\r\n            }\r\n        }\r\n        this.setState({ [ev.target.name]: ev.target.value })\r\n    }\r\n\r\n    dontSend(e) {\r\n        e.preventdefault();\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getadminvac: (data) => {\r\n            dispatch(getAdminVacations(data))\r\n        },\r\n        updatevac: (vacID, data) => {\r\n            dispatch(updateVacation(vacID, data))\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allvacations: state.vacations,\r\n        getvacationsmsg: state.getvacationsmsg,\r\n        isLogged: state.isLogged,\r\n        isAdmin: state.isAdmin,\r\n        currentUser: state.currentUser,\r\n        currentUserID: state.currentMemberId,\r\n        addVacErr: state.addVacErr\r\n    };\r\n};\r\n\r\nconst edit = connect(mapStateToProps, mapDispatchToProps)(Edit);\r\nexport default withRouter(edit);","import React, { Component } from 'react'\r\nimport { getUserVacs, deletVacation, getAdminVacations } from '../../../state/Action';\r\nimport { Modal, Button, Icon } from 'react-materialize'\r\n// Import all App dependencies.\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport io from 'socket.io-client';\r\nimport Edit from './Edit';\r\nconst socket = io('http://localhost:9999');\r\n\r\nclass VacationAdmin extends Component {\r\n\r\n    async componentDidMount() {\r\n        socket.on('vacationsChange', async (msg) => {\r\n            await this.props.getadminvac(this.props.currentMemberId)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"col s3\">\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-image\">\r\n                        <img src={this.props.vacation.picture} alt=\"\" />\r\n                        <div className=\"editDeleteZone\">\r\n                            <button onClick={this.deleteVac.bind(this)} className=\"deleteEditVac\"><i className=\"fas fa-trash-alt deleteVac\"></i></button>\r\n                            <Modal header='Modal Header' trigger={<button className=\"deleteEditVac \"> <i className=\"fas fa-edit editVac\"></i></button>}>\r\n                                <Edit v={this.props.vacation}/>\r\n                            </Modal>\r\n                        </div>\r\n\r\n                        <span className=\"card-title\">{this.props.vacation.destination}</span>\r\n                    </div>\r\n                    <div className=\"card-content center\">\r\n                        {this.props.vacation.description}<br /><br />\r\n\r\n                        <i className=\"fas fa-plane-departure\"></i> {this.props.vacation.fromdate}<br />\r\n                        <i className=\"fas fa-plane-departure\"></i> {this.props.vacation.todate} <br /><br />\r\n                        {this.props.vacation.price} <i className=\"fas fa-shekel-sign\"></i>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"card-action center\">\r\n                        {this.props.vacation.followers}\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    deleteVac() {\r\n        this.props.deletevac(this.props.vacation.id)\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getuservac: (data) => {\r\n            dispatch(getUserVacs(data))\r\n        },\r\n        deletevac: (data) => {\r\n            dispatch(deletVacation(data))\r\n        },\r\n        getadminvac: (data) => {\r\n            dispatch(getAdminVacations(data))\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allvacations: state.vacations,\r\n        getvacationsmsg: state.getvacationsmsg,\r\n        isLogged: state.isLogged,\r\n        isAdmin: state.isAdmin,\r\n        currentUser: state.currentUser,\r\n        currentUserID: state.currentMemberId,\r\n        addVacErr: state.addVacErr\r\n    };\r\n};\r\n\r\nconst vacationadmin = connect(mapStateToProps, mapDispatchToProps)(VacationAdmin);\r\nexport default withRouter(vacationadmin);","import React, { Component } from 'react'\r\n\r\n// Import all App dependencies.\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Actions.\r\nimport { MakeLogin, logOut, getAdminVacations, getUserVacs } from '../../../state/Action';\r\nimport VacationAdmin from './VacationAdmin';\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:9999');\r\n\r\nclass AdminMain extends Component {\r\n\r\n    async componentDidMount() {\r\n        socket.on('vacationsChange', async (msg) => {\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.isAdmin === 'true') {\r\n\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"card indigo darken-3 center-align\">\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\">All Vacations</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {this.props.allvacations.map(vacation => (\r\n                        <VacationAdmin\r\n                            key={vacation.id}\r\n                            vacation={vacation}\r\n                        />\r\n                    ))}\r\n\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1> Hello From Admin </h1>\r\n                <p> Main Page content </p>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loginRequest: data => {\r\n            return dispatch(MakeLogin(data));\r\n        },\r\n        goLogOut: (data) => {\r\n            dispatch(logOut(data));\r\n        },\r\n        getvacations: (data) => {\r\n            dispatch(getAdminVacations(data))\r\n        },\r\n        getuservac: (data) => {\r\n            dispatch(getUserVacs(data))\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allvacations: state.vacations,\r\n        userFollowed: state.UserFollowed,\r\n        UserNoFollow: state.UserNoFollow,\r\n        getvacationsmsg: state.getvacationsmsg,\r\n        isLogged: state.isLogged,\r\n        isAdmin: state.isAdmin,\r\n        currentUser: state.currentUser,\r\n        addVacErr: state.addVacErr,\r\n        currentUserID: state.currentMemberId,\r\n    };\r\n};\r\n\r\nconst adminmain = connect(mapStateToProps, mapDispatchToProps)(AdminMain);\r\nexport default withRouter(adminmain);","import React, { Component } from 'react'\r\nimport { getAdminVacations } from '../../../state/Action';\r\n// Import all App dependencies.\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Modal, Button, Icon } from 'react-materialize'\r\nimport io from 'socket.io-client';\r\nconst socket = io('http://localhost:9999');\r\nvar Chart = require('chart.js');\r\n\r\nclass Graph extends Component {\r\n\r\n    async componentDidMount() {\r\n        await this.createChart();\r\n        socket.on('vacationsChange', async (msg) => {\r\n            await this.props.getadminvac(this.props.currentMemberId)\r\n        })\r\n    }\r\n\r\n    createChart() {\r\n        let vacationfollowers = this.props.allvacations.filter(v => v.followers !== 0);\r\n        let labelsArry = [];\r\n        let followers = [];\r\n        for (let i = 0; i < vacationfollowers.length; i++) {\r\n            labelsArry.push(`${vacationfollowers[i].destination}`);\r\n            followers.push(vacationfollowers[i].followers);\r\n        }\r\n        var ctx = document.getElementById('myChart').getContext('2d');\r\n        new Chart(ctx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: labelsArry,\r\n                datasets: [{\r\n                    label: 'Followers',\r\n                    data: followers,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.6)',\r\n                        'rgba(54, 162, 235, 0.6)',\r\n                        'rgba(255, 206, 86, 0.6)',\r\n                        'rgba(75, 192, 192, 0.6)',\r\n                        'rgba(153, 102, 255, 0.6)',\r\n                        'rgba(255, 159, 64, 0.6)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    xAxes: [{\r\n                        stacked: true\r\n                    }],\r\n                    yAxes: [{\r\n                        stacked: true\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas id=\"myChart\"></canvas>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getadminvac: (data) => {\r\n            dispatch(getAdminVacations(data))\r\n        }\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allvacations: state.vacations,\r\n        getvacationsmsg: state.getvacationsmsg,\r\n        isLogged: state.isLogged,\r\n        isAdmin: state.isAdmin,\r\n        currentUser: state.currentUser,\r\n        currentUserID: state.currentMemberId,\r\n        addVacErr: state.addVacErr\r\n    };\r\n};\r\n\r\nconst graph = connect(mapStateToProps, mapDispatchToProps)(Graph);\r\nexport default withRouter(graph);","import React, { Component } from 'react'\nimport './App.css'\n\n// Import all App dependencies.\nimport { connect } from 'react-redux'\nimport { Switch, Route, withRouter } from 'react-router-dom'\n\n// Import all App Components.\nimport Nav from './comps/Nav'\nimport Signup from './comps/Auth/Signup'\nimport Signin from './comps/Auth/Signin'\nimport Main from './comps/Pages/Main'\nimport AdminCP from './comps/Pages/AdminCP/Admin'\n\n// Actions.\nimport { MakeLogin, MakeAdminLogin, getUserVacs } from './state/Action'\nimport AdminMain from './comps/Pages/AdminCP/AdminMain';\nimport Graph from './comps/Pages/AdminCP/Graph';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n     /* this.props.getuservac(this.props.currentUserID) */\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col s12\">\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Main} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/signin\" component={Signin} />\n            <Route exact path=\"/admin\" component={AdminCP} />\n            <Route exact path=\"/adminmain\" component={AdminMain} />\n            <Route exact path=\"/admin/graph\" component={Graph} />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAdmin: state.isAdmin,\n    currentUserID: state.currentMemberId,\n    isLogged: state.isLogged,\n    currentUser: state.currentMember,\n    allvacations: state.vacations,\n    userFollowed: state.UserFollowed,\n    UserNoFollow: state.UserNoFollow,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginRequest: data => {\n      return dispatch(MakeLogin(data));\n    },\n    adminLogin: data => {\n      return dispatch(MakeAdminLogin(data));\n    },\n        getuservac: (data) => {\n            dispatch(getUserVacs(data))\n        }\n  };\n};\n\nconst app = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default withRouter(app);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// The initialize state.\r\nconst initState = {\r\n    vacations: [],\r\n    UserFollowed: [],\r\n    UserNoFollow: [],\r\n    currentMemberId: 0,\r\n    currentMember: '',\r\n    regMsg: '',\r\n    regMsg_success: '',\r\n    isLogged: false,\r\n    isAdmin: 'false',\r\n    formMsg: '',\r\n    loginPass: '',\r\n    loginUser: '',\r\n    userFirst: '',\r\n    addVacErr: ''\r\n}\r\n\r\nconst Reducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SIGNIN':\r\n            let newStateSignUp = Object.assign({}, state, {\r\n                isLogged: true,\r\n                currentMember: action.data.firstName,\r\n                currentMemberId: action.data.userID,\r\n            })\r\n            return newStateSignUp;\r\n\r\n        case 'SIGNIN_ADMIN':\r\n            let newStateAdminLogin = Object.assign({}, state, {\r\n                isLogged: true,\r\n                isAdmin: 'true',\r\n                currentMember: action.data.firstName,\r\n                currentMemberId: action.data.userID,\r\n\r\n            })\r\n            return newStateAdminLogin;\r\n\r\n        case 'SIGNUP_TAKEN':\r\n            let newStateUserTaken = Object.assign({}, state, {\r\n                isLogged: false,\r\n                currentMember: '',\r\n                currentMemberId: '',\r\n                regMsg: 'The username ' + action.data + ' is Taken.'\r\n            })\r\n            return newStateUserTaken;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            let newStateSignSuccess = Object.assign({}, state, {\r\n                currentMember: action.data.firstName,\r\n                regMsg_success: 'OK',\r\n                currentMemberId: action.data.userID,\r\n                isLogged: true,\r\n            })\r\n            return newStateSignSuccess;\r\n\r\n        case 'ADD_VAC_TRUE':\r\n            let newStateVacAddSeccuss = Object.assign({}, state, {\r\n                addVacErr: '',\r\n                vacations: action.data.data.allVac[0]\r\n            })\r\n            return newStateVacAddSeccuss;\r\n\r\n        case 'ADD_VAC_ERR':\r\n            let newStateAddErr = Object.assign({}, state, {\r\n                addVacErr: action.data\r\n            })\r\n            return newStateAddErr;\r\n\r\n        case 'GET_VAC_ALL':\r\n            let newStateGetVac = Object.assign({}, state, {\r\n                vacations: action.data.data\r\n            })\r\n            return newStateGetVac;\r\n\r\n        case 'SORT_VAC':\r\n            let newStateSortVac = Object.assign({}, state, {\r\n                UserFollowed: action.data.data.yesfollow,\r\n                UserNoFollow: action.data.data.nofollow,\r\n            })\r\n            return newStateSortVac;\r\n\r\n        case 'ADD_FOLLOW':\r\n            let newStateAddVac = Object.assign({}, state, {\r\n\r\n            })\r\n            return newStateAddVac;\r\n\r\n        case 'UPDATE_VAC':\r\n            let newStateUpdateVac = Object.assign({}, state, {\r\n                \r\n            })\r\n            return newStateUpdateVac;\r\n\r\n        case 'DELETE_VAC':\r\n            let newStateDelVac = Object.assign({}, state, {\r\n\r\n            })\r\n            return newStateDelVac;\r\n\r\n        case 'LOGOUT':\r\n            let newStateLogOut = Object.assign({}, state, {\r\n                isLogged: false,\r\n                isAdmin: 'false',\r\n                currentMember: '',\r\n                currentMemberId: 0\r\n            })\r\n            return newStateLogOut;\r\n\r\n        case 'INPUT_HANDLE':\r\n            let newStateInputHandle = Object.assign({}, state, {\r\n                [action.data.name]: action.data.value\r\n            });\r\n            return newStateInputHandle;\r\n\r\n        case \"IS_LOGGED\":\r\n            let newStateIsLogged = Object.assign({}, state, {\r\n                currentMemberId: action.data.userid,\r\n                currentMember: action.data.firstname,\r\n                isLogged: true\r\n            });\r\n            return newStateIsLogged;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default Reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Setup Redux.\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport Reducer from './state/Reducer';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Declere the Redux Store.\nconst store = createStore(Reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}> <BrowserRouter><App /></BrowserRouter> </Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}